class PalabraDecorator < Draper::Base
  allows :palabra, :lugar, :traducciones
  include Draper::LazyHelpers
  decorates :palabra
  
  # Se hace esta sobreescritura por problemas con draper cuando
  # un atributo se llama igual que el modelo
  def palabra
   model.palabra  
  end

  def audio 
    model.audio.url
  end
  # Accessing Helpers
  #   You can access any helper via a proxy
  #
  #   Normal Usage: helpers.number_to_currency(2)
  #   Abbreviated : h._to_currency(2)
  #
  #   Or, optionally enable "lazy helpers" by including this module:
  #     include Draper::LazyHelpers
  #   Then use the helpers with no proxy:
  #     number_to_currency(2)

  # Defining an Interface
  #   Control access to the wrapped subject's methods using one of the following:
  #
  #   To allow only the listed methods (whitelist):
  #     allows :method1, :method2
  #
  #   To allow everything except the listed methods (blacklist):
  #     denies :method1, :method2

  # Presentation Methods
  #   Define your own instance methods, even overriding accessors
  #   generated by ActiveRecord:
  #
  #   def created_at
  #     h.content_tag :span, attributes["created_at"].strftime("%a %m/%d/%y"),
  #                   :class => 'timestamp'
  #   end
  #
  def significados_id_comma
    model.traducciones.collect(&:significado_id).join(',')
  end

  def significados_json
    significados = []
    model.traducciones.each do |t|
      significado = {}
      significado[:id]= t.significado.id
      significado[:text]= t.significado.palabra
      significados << significado
    end 
    significados.empty? ? 'null' : significados.to_json
  end

end
